#mcmonitor.ini
#schedule name must not contain spaces


default {

CONFIG_VERSION="Raspberry PI v.04 Sample"

ECHO_DISPLAY="OFF"
FORCE_EMAIL="FALSE"
NO_EMAIL="FALSE"
UPDATE_ROWNUM="TRUE"
DEBUG="FALSE"

sender='raspberry@gmail.com'
subject="Raspberry status mail"

MIN_SEVERITY_TO_DISPLAY=1
MIN_SEVERITY_TO_MAIL=3

SCRIPT_LOG="/tmp/mcmonitor_script.log"
STATUS_FILE="/tmp/mcmonitor_status.txt"
SOURCE_ENVIRONMENT="/opt/env.sh"

}


schedules {

schedule_name[1]="NON-STOP"
schedule_mon[1]="0:00 - 23:59"
schedule_tue[1]="0:00 - 23:59"
schedule_wed[1]="0:00 - 23:59"
schedule_thu[1]="0:00 - 23:59"
schedule_fri[1]="0:00 - 23:59"
schedule_sat[1]="0:00 - 23:59"
schedule_sun[1]="0:00 - 23:59"

schedule_name[2]="WORK-HOURS"
schedule_mon[2]="7:00 - 18:00"
schedule_tue[2]="7:00 - 18:00"
schedule_wed[2]="7:00 - 18:00"
schedule_thu[2]="7:00 - 18:00"
schedule_fri[2]="7:00 - 18:00"
schedule_sat[2]="7:00 - 18:00"
schedule_sun[2]="7:00 - 18:00"

schedule_name[3]="MORNINGS"
schedule_mon[3]="0:00 - 6:59"
schedule_tue[3]="0:00 - 6:59"
schedule_wed[3]="0:00 - 6:59"
schedule_thu[3]="0:00 - 6:59"
schedule_fri[3]="0:00 - 6:59"
schedule_sat[3]="0:00 - 6:59"
schedule_sun[3]="0:00 - 6:59"

schedule_name[4]="EVENINGS"
schedule_mon[4]="18:00 - 23:59"
schedule_tue[4]="18:00 - 23:59"
schedule_wed[4]="18:00 - 23:59"
schedule_thu[4]="18:00 - 23:59"
schedule_fri[4]="18:00 - 23:59"
schedule_sat[4]="18:00 - 23:59"
schedule_sun[4]="18:00 - 23:59"

schedule_name[5]="WEEKENDS"
schedule_mon[5]="0:00 - 0:00"
schedule_tue[5]="0:00 - 0:00"
schedule_wed[5]="0:00 - 0:00"
schedule_thu[5]="0:00 - 0:00"
schedule_fri[5]="0:00 - 0:00"
schedule_sat[5]="0:00 - 23:59"
schedule_sun[5]="0:00 - 23:59"
}

mail_groups {
#LIMITATION: mailgroup_name must not contain spaces
#The default_group must always be here. Mails will be sent to them for any of the problems. 
#The other groups can be added by using a variable add_recipient[n] into any test

mailgroup_name[1]="default_group"
mailgroup_text[1]="mihai.cosma@gmail.com"

}

command_check {

command[1]="ps -ef | grep 'node-mqtt-gateway' | grep -v grep | wc -l"
normalvalue[1]=1
message_YES[1]="[OK] mqtt-gateway service is running"
message_NOT[1]="[NOT OK] mqtt-gateway service is not running"
severity[1]=2
schedule[1]="NON-STOP"

}

script_check {

#script[1]="./example_script"
#normaloutput[1]=""
#message_YES[1]="example OK message"
#message_NOT[1]="example NOT OK message"
#severity[1]=5
#schedule[1]="NON-STOP"

}


remote_connections {

remote_IP[1]="192.168.100.30"
remote_port[1]="3389"
message_YES[1]="[OK] 192.168.100.30:3389 port is open."
message_NOT[1]="[NOT OK] Unable to connect to 192.168.100.30:3389"
severity[1]=2
schedule[1]="NON-STOP"

remote_IP[2]="192.168.100.33"
remote_port[2]="3389"
message_YES[2]="[OK] IP2:3389 port is open."
message_NOT[2]="[NOT OK] Unable to connect to IP2:3389"
severity[2]=5
schedule[2]="NON-STOP"

remote_IP[3]="192.168.100.2"
remote_port[3]="22"
message_YES[3]="[OK] IP3:22 port is open."
message_NOT[3]="[NOT OK] Unable to connect to IP3:22"
severity[3]=5
schedule[3]="NON-STOP"

}



dns_tests {

test_ip[1]="1.1.1.1"
test_host[1]="one.one.one.one"
severity[1]=5
schedule[1]="NON-STOP"

}



disk_space {

mountpoint[1]="/dev/root"
threshold[1]="80"
severity[1]=4
schedule[1]="NON-STOP"

mountpoint[2]="/dev/root"
threshold[2]="95"
severity[2]=5
schedule[2]="NON-STOP"

mountpoint[3]="/boot"
threshold[3]="80"
severity[3]=4
schedule[3]="NON-STOP"

}



oracle_checks {

##KNOWN BUG:  cannot select *, must select something.

#oracle_connect[1]="user/pass@DB"
#select_string[1]="select 'Connected to Oracle' from dual;"
#expected_result[1]="Connected to Oracle"
#message_YES[1]="[OK] Connected to Oracle"
#message_NOT[1]="[NOT OK] Unable to connect to Oracle (DB)"
#severity[1]=5
#schedule[1]="NON-STOP"

}

log_checks {

log_file[1]="/var/tmp/node-sensor.log"
grep_command[1]="grep 'temperature\\\":4'"
message_YES[1]="[OK] Temperature not above 40 degrees."
message_NOT[1]="[NOT OK] Temperature above 40 degrees."
severity[1]=5
schedule[1]="NON-STOP"

}
